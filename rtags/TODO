TODO

For version 1.0:

- Recognise 'alias :name' tokens
- include the argument list and an end of line $ pattern (at least the          
  first opening parenthesis should be included in the pattern)                    
- indicate whether the entry is a c(lass), a m(odule), or a f (method)          
  like ctags

Later:

- Add switch for not following symlinks
- Fix class Foo::Bar to show as such in the TAGS file
- Find modules with double colon notation like "BIO::MODULE::IO"
- Cache class names so classes can be found that lack an initialize
	method
- Provide - command line switch, allowing for
	  find . -name '*.rb' -print | rtags -

MUSINGS

Apart from adding the - switch at some point in the future it would
be neat to have smarter tags. For one, if a class has not initialize
method we would like to jump to the class definition on
Classname.new. If we were to store the tags we find in memory
(instead of just writing them out, as is the current behaviour) it
would be trivial to implement.

Also some tokens (alias) and multilines are not handled correctly.

Try:

cd ./test                                                                      ruby ../bin/rtags -R

and you get

Warn: parse error in <./data/report.rb> in line 170, pos 4

which is an unrecognised alias.
